name: folding-at-home-fcole90
title: Folding@Home
icon: snap/gui/fah-logo.png
base: core24
version: '7.6.latest~snap4'
summary: Folding at Home - Help research with distributed computing
description: |
 Folding@home (FAH or F@h) is a distributed computing project for simulating protein dynamics, including the process of
 protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen 
 scientists who volunteer to run simulations of protein dynamics on their personal computers. 
 Insights from this data are helping scientists to better understand biology, and providing new opportunities for 
 developing therapeutics.


grade: stable
confinement: strict
platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
compression: lzo  # Better decompression performance 

parts:
  python2:
    plugin: nil
    stage-packages:
      - python2
      - libpython2-stdlib 
      - libpython2.7-minimal 
      - libpython2.7-stdlib 
      - python2-minimal 
      - python2.7 
      - python2.7-minimal

  # This part installs the `desktop-launch` script which initialises desktop
  # features such as fonts, themes and the XDG environment. It also installs
  # the GTK2 runtime libraries.
  #
  # It is copied straight from the snapcraft desktop helpers project. Please
  # periodically check the source for updates and copy the changes.
  #    https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  # 
  desktop-gtk2:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk2"]
    build-packages:
      - build-essential
      - libgtk2.0-dev
    stage-packages:
      - libxkbcommon0  # XKB_CONFIG_ROOT
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libgtk2.0-0
      - libgdk-pixbuf2.0-0
      - libglib2.0-bin
      - libgtk2.0-bin
      - unity-gtk2-module
      - locales-all
      - libappindicator1
      - xdg-user-dirs
      - ibus-gtk
      - libibus-1.0-5
  
  python-gtk2:
    plugin: dump
    source: https://launchpad.net/ubuntu/+source/pygtk/2.24.0-5.1ubuntu2/+build/13765865/+files/python-gtk2_2.24.0-5.1ubuntu2_amd64.deb
    source-type: deb
    after:
      - desktop-gtk2
      - python2
    # Packages required to run this part
    stage-packages: 
      - libatk1.0-0
      - libcairo2
      - libgdk-pixbuf2.0-0
      - libglib2.0-0
      - libgtk2.0-0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - python-cairo
      - python-gobject-2
  
  # <--- Client (Background Daemon) --->
  # This part extracts the client from the deb
  # This is the background daemon
  fahclient:
    plugin: dump
    source: https://download.foldingathome.org/releases/public/release/fahclient/debian-stable-64bit/v7.6/latest.deb
    source-type: deb
    # Packages required to run this part
    stage-packages: 
      - bzip2
      - zlib1g
      - libglu1-mesa
      - libegl1-mesa
      - libgl1-mesa-dri
      - ocl-icd-libopencl1

    # Overrides the last step of the process, to allow that after calling again prime, we can symlink a required library.
    # The library is a relative symbolic link, so the reference is relative to the file and we avoid issues
    # We test if the symlink exists, as 
    override-prime: |
      snapcraftctl prime
      OPENGL_SYMLINK="usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libOpenCL.so"
      test ! -f "$OPENGL_SYMLINK" && ln -rs usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libOpenCL.so.1 "$OPENGL_SYMLINK" || echo "Found $OPENGL_SYMLINK, not linking"

  # <--- Desktop frontend --->
  fahcontrol:
    plugin: dump
    source: https://download.foldingathome.org/releases/public/release/fahcontrol/debian-stable-64bit/v7.6/latest.deb
    source-type: deb
    stage-packages: 
      - libxtst6
      - libcanberra-gtk-module
      - libatk-adaptor
      - libgail-common
    after:
      - desktop-gtk2
      - python2
      - python-gtk2
      - fahclient

  # <--- Molecules Visualisations --->
  fahviewer:
    plugin: dump
    source: https://download.foldingathome.org/releases/public/release/fahviewer/debian-stable-64bit/v7.6/latest.deb
    source-type: deb
    stage-packages: 
      - libx11-6
      - bzip2
      - zlib1g
      - libexpat1
      - libgl1-mesa-glx
      - libglu1-mesa
      - freeglut3
    after:
      - desktop-gtk2
      - python2
      - python-gtk2
      - fahclient

apps:

  # CLI command to configure the application
  configure: 
    command: usr/bin/FAHClient -v --chdir $SNAP_USER_COMMON --configure
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    # Makes this command be an autorun command upon install and boot: https://snapcraft.io/docs/services-and-daemons
    # Simple indicates that the command calls the service (no forking)
    # daemon: simple
    plugs:
      - browser-support
      - network
      - network-bind
      - opengl
      - x11
      - unity7
      - home
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - hardware-observe
  
  # Run the daemon from CLI as a systemd daemon
  client:
    command: usr/bin/FAHClient -v --chdir $SNAP_COMMON
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    # Makes this command be an autorun command upon install and boot: https://snapcraft.io/docs/services-and-daemons
    # Simple indicates that the command calls the service (no forking) 
    daemon: simple
    plugs:
      - network
      - network-bind
      - opengl
      - x11
      - unity7
      - home
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - hardware-observe
  
  # Run the Frontend
  FAHControl:
    # Set required environment variables
    environment:
      PYTHONPATH: "/usr/lib/python2.7/dist-packages:$SNAP/usr/lib/python2.7/dist-packages"
      DISABLE_WAYLAND: "1"  # Fallback to XWayland if running in a Wayland session.
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    plugs:
      - x11
      - unity7
      - home
      - network
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - opengl
      - hardware-observe
      - browser-support
    # 'desktop-launch' sets up the environment to correctly launch the application for desktop working
    command: bin/desktop-launch python2 $SNAP/usr/bin/FAHControl
  
  # Run the Visualisations
  FAHViewer:
    command: bin/desktop-launch $SNAP/usr/bin/FAHViewer
    environment:
      DISABLE_WAYLAND: 1  # Fallback to XWayland if running in a Wayland session.
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    plugs:
      - x11
      - unity7
      - home
      - network
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - opengl
      - hardware-observe
      - browser-support
  
  # Run the client in user space
  folding-at-home-fcole90:
    command: usr/bin/FAHClient -v --chdir $SNAP_USER_COMMON
    # autostart: folding-at-home-fcole90.desktop
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    # Makes this command be an autorun command upon install and boot: https://snapcraft.io/docs/services-and-daemons
    # Simple indicates that the command calls the service (no forking)
    # daemon: simple
    plugs:
      - network
      - network-bind
      - opengl
      - x11
      - unity7
      - home
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - hardware-observe
      - browser-support

# What permissions does this snap need
plugs:
  gtk-2-engines:
    interface: content
    target: $SNAP/lib/gtk-2.0
    default-provider: gtk2-common-themes
  gtk-2-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

